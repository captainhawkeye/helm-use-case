name: Manage AWS Secrets

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'create-update'
        type: choice
        options:
          - create-update
          - delete
      secret_names:
        description: 'Secret names to delete (comma-separated, only for delete action)'
        required: false
        type: string
        default: ''

env:
  AWS_REGION: us-west-2

jobs:
  manage-secrets:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      if: ${{ inputs.action == 'create-update' }}
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq
      if: ${{ inputs.action == 'create-update' }}
    
    - name: Create/Update secrets from JSON
      if: ${{ inputs.action == 'create-update' }}
      run: |
        JSON_CONTENT=$(cat secrets.json)
        
        echo "$JSON_CONTENT" | jq -r 'to_entries[] | "\(.key)=\(.value)"' | while IFS='=' read -r key value; do
          echo "Creating/Updating secret: $key"
          
          aws secretsmanager create-secret \
            --name "$key" \
            --description "Secret for $key created via GitHub Actions" \
            --secret-string "$value" \
            --region ${{ env.AWS_REGION }} || \
          aws secretsmanager update-secret \
            --secret-id "$key" \
            --secret-string "$value" \
            --region ${{ env.AWS_REGION }}
            
          echo "‚úÖ Secret $key created/updated successfully"
        done
    
    - name: Delete secrets
      if: ${{ inputs.action == 'delete' }}
      run: |
        if [ -z "${{ inputs.secret_names }}" ]; then
          echo "‚ùå Error: No secret names provided for deletion"
          exit 1
        fi
        
        IFS=',' read -ra SECRETS <<< "${{ inputs.secret_names }}"
        
        for secret_name in "${SECRETS[@]}"; do
          secret_name=$(echo "$secret_name" | xargs)
          
          echo "Deleting secret: $secret_name"
          
          aws secretsmanager delete-secret \
            --secret-id "$secret_name" \
            --force-delete-without-recovery \
            --region ${{ env.AWS_REGION }} && \
          echo "‚úÖ Secret $secret_name deleted successfully" || \
          echo "‚ö†Ô∏è Failed to delete secret $secret_name (it may not exist)"
        done
        
        echo "üóëÔ∏è Deletion process completed"

